{"version":3,"sources":["context/ThemeContext.js","components/ThemeSwitcher/ThemeSwitcher.js","context/BooksContext.js","components/Header/Header.js","components/BookItem/BookItem.js","components/Button/Button.js","components/AddBookForm/AddBookForm.js","components/BookList/BookList.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","props","_useState","useState","isLightTheme","light","ui","bg","syntax","syntaxAlt","borderColor","dark","_useState2","Object","slicedToArray","theme","setTheme","react_default","a","createElement","Provider","value","toggleTheme","objectSpread","children","Icon","styled","i","_templateObject","ThemeSwitcher","React","useContext","className","onClick","e","BooksContext","BooksContextProvider","id","title","author","books","setBooks","_useState3","isOpen","_useState4","modal","setModal","deleteBook","selectedBook","newBooks","filter","book","saveBook","concat","toConsumableArray","length","openModal","closeModal","HeaderContainer","div","Header_templateObject","ThemeSwitcherContainer","_templateObject2","Header","components_ThemeSwitcher_ThemeSwitcher","BookContainer","BookItem_templateObject","_ref","Title","h3","BookItem_templateObject2","_ref2","Author","p","_templateObject3","_templateObject4","BookItem","BookItem_Icon","StyledButton","button","Button_templateObject","Button","text","Wrapper","AddBookForm_templateObject","h2","AddBookForm_templateObject2","StyledInput","input","AddBookForm_templateObject3","_ref3","FormContainer","AddBookForm_templateObject4","StyledModal","Modal","_templateObject5","_ref4","_ref5","StyledForm","form","_templateObject6","setAppElement","AddBookForm","_React$useContext2","setBook","onChange","defineProperty","name","onRequestClose","contentLabel","AddBookForm_Title","onSubmit","preventDefault","type","placeholder","target","components_Button_Button","ButtonContainer","BookList_templateObject","List","ul","BookList_templateObject2","BookList","_React$useContext","Fragment","components_AddBookForm_AddBookForm","map","components_BookItem_BookItem","key","AppContainer","App_templateObject","App","context_BooksContext","components_Header_Header","components_BookList_BookList","Boolean","window","location","hostname","match","ReactDOM","render","context_ThemeContext","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e14da5ed.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [ theme, setTheme ] = useState({\r\n\t\tisLightTheme: true,\r\n\t\tlight: {\r\n\t\t\tui: 'white',\r\n\t\t\tbg: 'white',\r\n\t\t\tsyntax: 'var(--color-grey-dark-1)',\r\n\t\t\tsyntaxAlt: 'var(--color-grey-dark-2)',\r\n\t\t\tborderColor: 'var(--color-grey-light-4)'\r\n\t\t},\r\n\t\tdark: {\r\n\t\t\tui: '#253341',\r\n\t\t\tbg: '#15202B',\r\n\t\t\tsyntax: 'white',\r\n\t\t\tsyntaxAlt: 'var(--color-grey-dark-2)',\r\n\t\t\tborderColor: 'var(--color-grey-dark-1)'\r\n\t\t}\r\n\t});\r\n\r\n\tconst toggleTheme = () => {\r\n\t\tsetTheme({ ...theme, isLightTheme: !theme.isLightTheme });\r\n\t};\r\n\r\n\treturn <ThemeContext.Provider value={{ theme, toggleTheme }}>{props.children}</ThemeContext.Provider>;\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\n\r\nconst Icon = styled.i`\r\n\tcolor: white;\r\n\tfont-size: 1.5rem;\r\n\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nconst ThemeSwitcher = () => {\r\n\tconst { toggleTheme } = React.useContext(ThemeContext);\r\n\treturn <Icon className=\"fa fa-adjust\" onClick={(e) => toggleTheme()} />;\r\n};\r\n\r\nexport default ThemeSwitcher;\r\n","import React, { createContext, useState } from 'react';\r\n\r\nexport const BooksContext = createContext();\r\n\r\nconst BooksContextProvider = (props) => {\r\n\tconst [ books, setBooks ] = useState([\r\n\t\t{ id: 1, title: 'El Imperio Final', author: 'Brandon Sanderson' },\r\n\t\t{ id: 2, title: 'El Pozo de la Ascensión', author: 'Brandon Sanderson' },\r\n\t\t{ id: 3, title: 'El Héroe de las Eras', author: 'Brandon Sanderson' }\r\n\t]);\r\n\r\n\tconst [ modal, setModal ] = useState({\r\n\t\tisOpen: false\r\n\t});\r\n\r\n\tconst saveBook = (book) => {\r\n\t\tsetBooks([ ...books, { id: books.length + 1, ...book } ]);\r\n\t\tsetModal({ isOpen: false });\r\n\t};\r\n\r\n\tconst deleteBook = (selectedBook) => {\r\n\t\tconst newBooks = books.filter((book) => selectedBook.id !== book.id);\r\n\t\tsetBooks(newBooks);\r\n\t};\r\n\r\n\tconst openModal = () => {\r\n\t\tsetModal({ isOpen: true });\r\n\t};\r\n\r\n\tconst closeModal = () => {\r\n\t\tsetModal({ isOpen: false });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<BooksContext.Provider value={{ books, deleteBook, saveBook, modal, openModal, closeModal }}>\r\n\t\t\t{props.children}\r\n\t\t</BooksContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default BooksContextProvider;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ThemeSwitcher from '../ThemeSwitcher/ThemeSwitcher';\r\nimport { BooksContext } from '../../context/BooksContext';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\n\r\nconst HeaderContainer = styled.div`\r\n\tpadding: 3rem;\r\n\tbackground-color: var(--color-primary);\r\n\tcolor: white;\r\n\tborder-radius: 2rem;\r\n\toverflow: hidden;\r\n\ttext-align: center;\r\n\tposition: relative;\r\n\r\n\t@media only screen and (max-width: 600px) {\r\n\t\tmargin: 0;\r\n\t\twidth: 100%;\r\n\t\tborder-radius: 0;\r\n\t}\r\n`;\r\n\r\nconst ThemeSwitcherContainer = styled.div`\r\n\tposition: absolute;\r\n\tright: 2rem;\r\n\ttop: 2rem;\r\n`;\r\n\r\nconst Header = () => {\r\n\tconst { books } = React.useContext(BooksContext);\r\n\treturn (\r\n\t\t<HeaderContainer>\r\n\t\t\t<ThemeSwitcherContainer>\r\n\t\t\t\t<ThemeSwitcher />\r\n\t\t\t</ThemeSwitcherContainer>\r\n\t\t\t<h1>Reading List</h1>\r\n\t\t\t<p>Currently you have {books.length} books to read</p>\r\n\t\t</HeaderContainer>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\nimport { BooksContext } from '../../context/BooksContext';\r\n\r\nconst BookContainer = styled.div`\r\n\tbackground: white;\r\n\tpadding: 1.5rem;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: flex-end;\r\n\tborder-radius: .6rem;\r\n\tbox-shadow: var(--shadow-light);\r\n\tbackground-color: ${({ theme }) => (theme.isLightTheme ? theme.light.bg : theme.dark.bg)};\r\n\r\n\t&:not(:last-child) {\r\n\t\tmargin-bottom: 3rem;\r\n\t}\r\n`;\r\n\r\nconst Title = styled.h3`\r\n\tmargin-bottom: 1.5rem;\r\n\tfont-weight: 600;\r\n\tcolor: ${({ theme }) => (theme.isLightTheme ? theme.light.syntax : theme.dark.syntax)};\r\n`;\r\n\r\nconst Author = styled.p`\r\n\tfont-size: 1rem;\r\n\tfont-weight: 200;\r\n\tcolor: var(--color-grey-dark-2);\r\n`;\r\n\r\nconst Icon = styled.i`\r\n\tcolor: var(--color-grey-dark-3);\r\n\tfont-size: 1.5rem;\r\n\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t\tcolor: #b40000;\r\n\t}\r\n`;\r\n\r\nconst BookItem = (props) => {\r\n\tconst { theme } = React.useContext(ThemeContext);\r\n\tconst { deleteBook } = React.useContext(BooksContext);\r\n\tconst { book } = props;\r\n\r\n\tconst handleDeleteBook = () => {\r\n\t\tdeleteBook(book);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<BookContainer theme={theme}>\r\n\t\t\t<div>\r\n\t\t\t\t<Title theme={theme}>{book.title}</Title>\r\n\t\t\t\t<Author>{book.author}</Author>\r\n\t\t\t</div>\r\n\t\t\t<Icon className=\"fa fa-trash-o\" onClick={() => handleDeleteBook()} />\r\n\t\t</BookContainer>\r\n\t);\r\n};\r\n\r\nexport default BookItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n\tbackground: transparent;\r\n\tborder: 0;\r\n\tpadding: 0;\r\n\tcursor: pointer;\r\n\toutline: 0;\r\n\tdisplay: inline-block;\r\n\tposition: relative;\r\n\tpadding: 1.2rem 2.5rem;\r\n\ttop: 0;\r\n\tcolor: #fff;\r\n\tfont-size: 1.4rem;\r\n\tfont-weight: 600;\r\n\tborder-radius: 5rem;\r\n\tbackground-color: var(--color-primary);\r\n\ttransition: all 0.2s ease;\r\n\r\n\t&:hover {\r\n\t\ttop: -.6rem;\r\n\t\tbox-shadow: var(--shadow-blue-dark);\r\n\t}\r\n\r\n\t&:active {\r\n\t\tbackground-color: var(--color-primary-dark);\r\n\t\ttop: 0;\r\n\t\tbox-shadow: none;\r\n\t}\r\n\r\n\t&:focus {\r\n\t\t@media only screen and (max-width: 600px) {\r\n\t\t\ttop: 0;\r\n\t\t\tbox-shadow: none;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Button = (props) => {\r\n\treturn <StyledButton {...props}>{props.text}</StyledButton>;\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport styled from 'styled-components';\r\nimport { BooksContext } from '../../context/BooksContext';\r\nimport Button from '../Button/Button';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\n\r\nconst Wrapper = styled.div`position: relative;`;\r\n\r\nconst Title = styled.h2`color: ${({ theme }) => (theme.isLightTheme ? theme.light.syntax : theme.dark.syntax)};`;\r\n\r\nconst StyledInput = styled.input`\r\n\tborder: none;\r\n\tpadding: 1rem 0;\r\n\twidth: 100%;\r\n\tborder-bottom: 2px solid var(--color-grey-light-4);\r\n\toutline: none;\r\n\tcolor: ${({ theme }) => (theme.isLightTheme ? theme.light.syntax : theme.dark.syntax)};\r\n\tmargin: 2rem 0;\r\n\tfont-size: 1.5rem;\r\n\tbackground-color: ${({ theme }) => (theme.isLightTheme ? theme.light.ui : theme.dark.ui)};\r\n\r\n\t&:focus {\r\n\t\tborder-bottom: 2px solid var(--color-primary);\r\n\t}\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\nconst StyledModal = styled(Modal)`\r\n  background-color: ${({ theme }) => (theme.isLightTheme ? theme.light.bg : theme.dark.bg)};\r\n  width: 42rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 2rem;\r\n  outline: none;\r\n  border: 1px solid ${({ theme }) => (theme.isLightTheme ? theme.light.borderColor : theme.dark.borderColor)};\r\n  border-radius: .7rem;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n`;\r\n\r\nModal.setAppElement('#modal');\r\n\r\nconst AddBookForm = () => {\r\n\tconst { theme } = React.useContext(ThemeContext);\r\n\tconst { modal, closeModal, saveBook } = React.useContext(BooksContext);\r\n\tconst [ book, setBook ] = useState({\r\n\t\ttitle: '',\r\n\t\tauthor: ''\r\n\t});\r\n\r\n\tconst handleCloseModal = () => {\r\n\t\tcloseModal();\r\n\t};\r\n\r\n\tconst onChange = (input) => {\r\n\t\tsetBook({ ...book, [input.name]: input.value });\r\n\t};\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsaveBook(book);\r\n\t\tsetBook({\r\n\t\t\ttitle: '',\r\n\t\t\tauthor: ''\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<StyledModal\r\n\t\t\t\tisOpen={modal.isOpen}\r\n\t\t\t\tonRequestClose={handleCloseModal}\r\n\t\t\t\tcontentLabel=\"Add Book Modal\"\r\n\t\t\t\ttheme={theme}\r\n\t\t\t>\r\n\t\t\t\t<FormContainer>\r\n\t\t\t\t\t<Title theme={theme}>Add Book</Title>\r\n\t\t\t\t\t<StyledForm onSubmit={onSubmit}>\r\n\t\t\t\t\t\t<StyledInput\r\n\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Book Name\"\r\n\t\t\t\t\t\t\tonChange={(e) => onChange(e.target)}\r\n\t\t\t\t\t\t\ttheme={theme}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<StyledInput\r\n\t\t\t\t\t\t\tname=\"author\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Author Name\"\r\n\t\t\t\t\t\t\tonChange={(e) => onChange(e.target)}\r\n\t\t\t\t\t\t\ttheme={theme}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button text=\"Save\" />\r\n\t\t\t\t\t</StyledForm>\r\n\t\t\t\t</FormContainer>\r\n\t\t\t</StyledModal>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default AddBookForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BookItem from '../BookItem/BookItem';\r\nimport Button from '../Button/Button';\r\nimport { BooksContext } from '../../context/BooksContext';\r\nimport AddBookForm from '../AddBookForm/AddBookForm';\r\n\r\nconst ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tmargin-top: 3rem;\r\n`;\r\n\r\nconst List = styled.ul`padding: 3rem 2rem;`;\r\n\r\nconst BookList = (props) => {\r\n\tconst { books, openModal } = React.useContext(BooksContext);\r\n\r\n\tconst handleAddBook = (e) => {\r\n\t\topenModal();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t<Button text=\"Add Book\" onClick={handleAddBook} />\r\n\t\t\t\t<AddBookForm />\r\n\t\t\t</ButtonContainer>\r\n\t\t\t<List>{books.map((book) => <BookItem book={book} key={book.id} />)}</List>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default BookList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from './components/Header/Header';\r\nimport BookList from './components/BookList/BookList';\r\nimport { ThemeContext } from '../src/context/ThemeContext';\r\nimport BooksContextProvider from './context/BooksContext';\r\n\r\nconst AppContainer = styled.div`\r\n\tmax-width: 45rem;\r\n\tmargin: 30px auto;\r\n\tborder-radius: 2rem;\r\n\toverflow: hidden;\r\n\tbackground-color: ${({ theme }) => (theme.isLightTheme ? theme.light.ui : theme.dark.ui)};\r\n\tbox-shadow: 0 14px 28px rgba(0, 0, 0, 0.1), 0 10px 10px rgba(0, 0, 0, 0.1);\r\n\tmin-height: 100vh;\r\n\r\n\t@media only screen and (max-width: 600px) {\r\n\t\tmax-width: none;\r\n\t\tmargin: 0;\r\n\t\twidth: 100vw;\r\n\t\tborder-radius: 0;\r\n\t}\r\n`;\r\n\r\nconst App = () => {\r\n\tconst { theme } = React.useContext(ThemeContext);\r\n\treturn (\r\n\t\t<AppContainer theme={theme}>\r\n\t\t\t<BooksContextProvider>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<BookList />\r\n\t\t\t</BooksContextProvider>\r\n\t\t</AppContainer>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ThemeContextProvider from './context/ThemeContext';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<ThemeContextProvider>\r\n\t\t<App />\r\n\t</ThemeContextProvider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}